convert md2pdf with pandoc for greeks.
example:
pandoc orange.md -o orange.pdf --pdf-engine=xelatex -V mainfont="DejaVu Serif"
Αν δεν ορίσουμε γραμματοσειρά που να υποστηριζει ελληνικούς χαρακτήρες το convert.sh θα σπάσει. 

hmtl static for mobile:

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Hello, World!</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            padding: 50px;
        }
    </style>
</head>

<body>
    <h1>Hello, World!</h1>
</body>

</html>
Explanation:

    The <!DOCTYPE html> declaration defines the document type and version of HTML.
    The <html> element is the root element of the HTML document.
    The <head> section contains meta tags for character set and viewport configuration. The viewport meta tag is essential for responsive design on mobile devices.
    The <title> element sets the title of the webpage, which appears in the browser's title bar or tab.
    The <style> element includes a simple CSS rule to center the text and add some padding.
    The <body> section contains the main content of the webpage. In this case, it's a heading (<h1>) with the text "Hello, World!".

This code provides a basic, mobile-friendly structure. You can customize the styles and content further based on your preferences. Save the code in an HTML file (e.g., index.html) and upload it to your web hosting provider.

Gia google adds:

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Your Simple Page</title>
    <!-- Add the following script tag to your head section -->
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
    <script>
        (adsbygoogle = window.adsbygoogle || []).push({
            google_ad_client: "ca-pub-XXXXXXXXXXXXXXXX",
            enable_page_level_ads: true
        });
    </script>
    <!-- Your existing styles go here -->
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            display: flex;
            flex-direction: column;
            min-height: 100vh;
        }

        header {
            background-color: #333;
            color: #fff;
            padding: 10px;
            text-align: center;
        }

        main {
            flex: 1;
            padding: 20px;
        }

        footer {
            background-color: #333;
            color: #fff;
            padding: 10px;
            text-align: center;
        }

        img {
            max-width: 100%;
            height: auto;
        }
    </style>
</head>

<body>

    <header>
        <h1>Your Simple Page</h1>
    </header>

    <main>
        <!-- Ad Banner at the Top -->
        <ins class="adsbygoogle"
            style="display:block"
            data-ad-client="ca-pub-XXXXXXXXXXXXXXXX"
            data-ad-slot="top_banner_slot_id"
            data-ad-format="auto"></ins>
        <script>
            (adsbygoogle = window.adsbygoogle || []).push({});
        </script>

        <p>Your content goes here.</p>
        <img src="your-image1.jpg" alt="Image 1">
        <img src="your-image2.jpg" alt="Image 2">

        <!-- Ad Banner at the Bottom -->
        <ins class="adsbygoogle"
            style="display:block"
            data-ad-client="ca-pub-XXXXXXXXXXXXXXXX"
            data-ad-slot="bottom_banner_slot_id"
            data-ad-format="auto"></ins>
        <script>
            (adsbygoogle = window.adsbygoogle || []).push({});
        </script>
    </main>

    <footer>
        <p>Your footer content goes here.</p>
    </footer>

</body>

</html>
    Viewport Meta Tag:
        The <meta name="viewport" content="width=device-width, initial-scale=1.0"> meta tag is included in the head section. This tag ensures that the page adapts to the width of the device's screen and sets the initial zoom level.

    Fluid Images:
        The CSS rule img { max-width: 100%; height: auto; } ensures that images are responsive and won't exceed the width of their container. This helps maintain a good layout on various screen sizes.

    Flexbox Layout:
        The use of flexbox in the body's styles (display: flex; flex-direction: column; min-height: 100vh;) helps in creating a flexible and responsive layout, especially for mobile devices.

    Media Queries:
        While the example doesn't include specific media queries for different breakpoints, the provided CSS structure and use of max-width: 100%; for images contribute to a responsive design.


