--- ../usr/lib/setup/SeTpartitions	2024-05-17 15:17:07.207384436 +0300
+++ SeTpartitions	2024-05-17 16:42:54.633541523 +0300
@@ -35,6 +35,21 @@
    mkfs.f2fs -f $1 1> $REDIR 2> $REDIR
 }
 
+# make_bcachefs 
+make_bcachefs() {
+    SIZE=$(get_part_size $1)
+    dialog --title "FORMATTING" \
+    --backtitle "Formatting $1 with filesystem bcachefs." \
+    --infobox "Formatting $1  \n\
+Size:  $SIZE \n\
+Filesystem type: bcachefs " 0 0
+    if mount | grep "$1 " 1> $NDIR 2> $NDIR ; then
+        umount $1 2> $NDIR
+    fi
+       make_bcachefs $1
+}
+
+
 # make_btrfs( dev ) - Create a new btrfs filesystem on the named dev.
 # Parameters:  dev     Device node to format.
 make_btrfs() {
@@ -238,7 +253,7 @@
 # ask_fs( dev ) - Asks the user the type of filesystem to use for the named
 #                 device.  Answer in $TMP/return
 ask_fs() {
-  unset BTRFS EXT2 EXT3 F2FS JFS REISERFS XFS
+  unset BCACHEFS BTRFS EXT2 EXT3 F2FS JFS REISERFS XFS
   if grep -wq ext2 /proc/filesystems 1> $NDIR 2> $NDIR ; then
     EXT2="Ext2 is the traditional Linux file system and is fast and stable. "
   fi
@@ -253,6 +268,9 @@
   if grep -wq reiserfs /proc/filesystems 1> $NDIR 2> $NDIR ; then
     REISERFS="ReiserFS is a journaling filesystem that stores all files and filenames in a balanced tree structure. "
   fi
+  if grep -wq bcachefs /proc/filesystems 1> $NDIR 2> $NDIR ; then
+    BCACHEFS="Bcachefs is modern, scalable, copy-on-write filesystem for diverse systems. "
+  fi
   if grep -wq btrfs /proc/filesystems 1> $NDIR 2> $NDIR ; then
     BTRFS="Btrfs is a B-tree copy-on-write filesystem. "
   fi
@@ -290,6 +308,9 @@
   if [ ! "$REISERFS" = "" ]; then
     echo "\"reiserfs\" \"ReiserFS Journaling Filesystem\" \\" >> $TMP/tempscript
   fi
+  if [ ! "$BCACHEFS" = "" ]; then
+    echo "\"bcachefs\" \"Î’cachefs Copy-on-Write B-tree Filesystem\" \\" >> $TMP/tempscript
+  fi
   if [ ! "$BTRFS" = "" ]; then
     echo "\"btrfs\" \"Btrfs Copy-on-Write B-tree Filesystem\" \\" >> $TMP/tempscript
   fi
@@ -374,6 +395,8 @@
     fi
   elif [ "$ROOT_SYS_TYPE" = "reiserfs" ]; then
     make_reiserfs $ROOT_DEVICE
+  elif [ "$ROOT_SYS_TYPE" = "bcachefs" ]; then
+    make_bcachefs $ROOT_DEVICE
   elif [ "$ROOT_SYS_TYPE" = "btrfs" ]; then
     make_btrfs $ROOT_DEVICE
   elif [ "$ROOT_SYS_TYPE" = "f2fs" ]; then
@@ -478,6 +501,8 @@
           fi
         elif [ "$NEXT_SYS_TYPE" = "reiserfs" ]; then
           make_reiserfs $NEXT_PARTITION
+          elif [ "$NEXT_SYS_TYPE" = "bcachefs" ]; then
+          make_bcachefs $NEXT_PARTITION
         elif [ "$NEXT_SYS_TYPE" = "btrfs" ]; then
           make_btrfs $NEXT_PARTITION
         elif [ "$NEXT_SYS_TYPE" = "f2fs" ]; then
